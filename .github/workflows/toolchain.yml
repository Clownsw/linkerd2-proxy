name: rust-toolchain

on: [pull_request]

permissions:
  contents: read

env:
  YQ_VERSION: v4.2.0

jobs:
  changes:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: tj-actions/changed-files@205450238e81d3da0e0ec2d776f58c12846fddfb
        id: changed-files
        with:
          files: |
            rust-toolchain
            Dockerfile
            **/Dockerfile
            .github/workflows/*
    outputs:
      changed: ${{ steps.changed-files.outputs.any_changed == 'true' && 'true'  || '' }}

  dockerfiles:
    needs: [changes]
    if: needs.changes.outputs.changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: |
          VERSION="$(cat rust-toolchain)"
          ex=0
          for f in $(find . -name Dockerfile -and -not -path './.github/actions/release-tag-meta/*'); do
            versions=$(sed -nE 's/^ARG RUST_VERSION=([^ ]+)/\1/p' $f)
            if [ -z "$versions" ]; then
              echo "::error file=$f::$f missing 'RUST_VERSION' argument"
              ex=$((ex + 1))
            fi
            for mismatch in $(echo "$version" | grep -vF "$VERSION" || true) ; do
              echo "::error file=$f::$f uses incorrect rust version(s): $mismatch"
              ex=$((ex + 1))
            done
          done
          exit $ex

  workflows:
    needs: [changes]
    if: needs.changes.outputs.changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: |
          curl --proto '=https' --tlsv1.3 -vsSfLo /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64" \
            && chmod +x /usr/local/bin/yq
      - run: |
          VERSION="$(cat rust-toolchain)"
          ex=0
          for f in $(find .github/workflows -name '*.yml') ; do
            echo "# $f"
            for image in $(yq eval '.jobs[].container.image' $f) ; do
              if [[ "$image" =~ "^docker://(docker.io/library/)?rust:" ]]; then
                v="${${image##*rust:}%%-*}"
                if [[ "$v" != "$VERSION" ]]; then
                  echo "::warning file=$f::$f uses incorrect rust version: $v"
                  ex=$((ex + 1))
                fi
              fi
            done
          done
          exit $ex
